IDENTIFIER
q
Soup
V17a
a34TMNs
MARILYN
888ff	comment not valid, should return "No";

NUMBER
0
177
.5384
+0.7300
-9999999999999999999999200.0848888888888888888888888888888888
-.083-03 comment actually two numbers ;

STRING
'fljeie0824nwociwohueuhfwefbfpweqoiu////'
'fljeie0824nwociwohueuhfwefbfpweqoiu////fljeie08
	   24nwociwohueuhf
	   wefbfpweqoiu////fljeie0824nwociwohueuhfwefbfpweqoiu////'   

VARIABLE
epsilon
detA
a23038fjffffffffffffffffffa130311030831301317
Q[7]
Q[7,2]
Qqqqqqqqqqqqqqqqqqqqqqqqqqqqqq[7,2,4,2,2,4,6]
xxxxx[sin(nXpi/2),QQQQQQQQ[3,n,4]]
x[Q[sin(nXpi/2)],Q[3,n,4,4,3,5,4]]
x[Q[sin(nXpi/2)],Q[3888888888888888888888888,n,4,4,3,5,4]]
x[Q[sin(sin(nXpi/2nXpi2)],Q[3888888888888888888888888,n,4,4,3,5,4]]
x[Q[sin(sin(nXpi/2nXpi2))],Q[3888888888888888888888888,n,4,4,3,5,4]]

FUNCTION_DESIGNATORS
R
sin(a-b)
J(v+s,n)
S(s-5)Temperature:(T)Pressure:(P)
Compile(' := ')Stack:(Q)
S(s-5)Temperature:(T)Pressure:(P)Temperature:(T)Pressure:(P)Pressure:(P)
J(v+s,n,v+s,n,n,v+s,n,n,v+s,n,n,v+s,n,n,v+s,n,n,v+s,n,n,v+s,n)
Compile(' := ')Stack:(Q,n,n,v+s,n,n,v+s,n,nn,n,v+s,n,n,v+s,n,n,v+s,v+s,n)Temperature:(T)Pressure:(P)Temperature:(T)Pressure:(P)Pressure:(P)

ARITHMETIC_EXPRESSION
7.394-8
sum
w[i+2,8]
cos(y+zX3)
(a-3/y+vu^8)
sum^cos(y+zX3)
sum^cos(y+zX3)+(a-3/y+vu^8)+cos(y+zX3)+w[i+2,8]
7.394 - 8^w[i+2,8]^(a-3/y + vu ^8 )
omegaXsum^cos(y+zX3)/7.934-8^w[i+2,8]^(a-3/y+vu-8)	
U-Yu+omegaXsum^cos(y+zX3)/7.934-8^w[i+2,8]^(a-3/y+vu^8)
wXu-Q(S+Cu)^2
if q > 0 then S+3XQ/A else 2XS + 3Xqn
ifa< 0thenU+V else if aXb > 17 then U/V else if k \= y then V/U else 0 
aXsin(omegaXt)
0.5712Xa[nX(N-1)/2,0]
(AXrctan(y) + Z) ^(7+Q)
if q then n - 1 else n
if a < 0 then A/B else if b = 0 then B/A else z

BOOLEAN_EXPRESSION
y = -1
Y > V or z < q
a+b > -5 and z - d > q ^2
p and q or x \=y
g == not a and b and not c or d or e -> not f
g == not a and b and not c or d or e -> not f and a and b and c 
if k<1 then s>w else h <= c
if if if a then b else c then d else f then g else h < k
Y > V or z < q or a+b > -5 and z - d > q ^2 and p and q or x \=y or g == not a and b and not c or d or e -> not f

DESIGNATIONAL_EXPRESSION
17
p9
Choose[n-1]
Town[if y < 0 then N else N+1]
if Ab < c then 17 else q[if w <= 0 then 2 else n]

BASIC_STATEMENT
a := p+q
go to Naples
START: CONTINUE: W:=7.993
a := pXq+fffa+e+q/fXaDXkg+s-so

COMPOUND_STATEMENT
begin x:=0 ; for y := 1 step 1 until n do x:= x+A[y]; if x > q then go
to STOP else if x > w - 2 then go to S; Aw: St: W: = x+bob end

BLOCK
Q: begin integer i,k; real w; for i:= 1 step 1 until m do for k:=i+1
step 1 until m do begin w := A[i,k] ; A[i,k] := A[k,i] ; A[k,i] := w
end for i and k end

ASSIGNMENT_STATEMENT
s := p[0] := n := n+1+s
n := n+1
A : = B/C - v -q Xs
s[v,k+2] := 3 - arctan(sXzeta)
V := Q> Y and Z	                 comment doesn't work ;

GOTO_STATEMENT
gotoNaples
go to 8
go to exit [n+1]
go to Town[if y<0 then N else N+1]
go to if Ab<c then 17 else q[if w < 0 then 2 else n]

DUMMY_STATEMENT
John:

CONDITIONAL_STATEMENT
if x > 0 then n:= n+1
if v > u then V:q:=n+m else go to R
if s < 0 or P < = Q then AA:begin if q<v then a:= v/s
   else y:=2Xa end
   else if v>s then a:= v-q else if v > s-1
   then go to S

FOR_STATEMENT
for q : = 1 step s until n do A[q] := B[q]
for k:= 1, V1X2 while V1 < N do
	for j:= 1+G, L, 1 step 1 until N, C+D do
	A[k,j] := B[k,j]

PROCEDURE_STATEMENT
Spur (A)Order: (7)Result to:(V)
Transpose(W,v+1)
Absmax(A,N,M,yY,1,K)
Innerproduct(A[t,P,u],B[P],10,P,Y)

TYPE_DECLARATION
integer p,q,s
own Boolean Acryl,n

ARRAY_DECLARATION
array a,b,c[7:n,2:m], s[-2:10]
own integer array A[if c<0 then 2 else 1:20]
real array q[-7:-1]
array a,b,c[7:n,2:m,2:m,2:m,2:m,2:m,2:m], s[-2:10,-2:10,-2:10]

SWITCH_DECLARATION
switch Q:=p1,w
switch S:= S1,S2,Q[m], if v > -5 then S3 else S4

PROCEDURE_DECLARATION
comment works;
procedure p;
begin
   print(123, -10, +4.0);
   outstring(1, 'hello\nhello\n')
end

comment works;
procedure p;
begin integer i; comment this is a comment up top;

      comment here is another comment;
	  a:=4;
      print( sum(i, 1, 100, 1/i), 6, 3 )
end

comment works;
procedure p;
begin integer i; comment this is a comment up top;

      comment here is another comment;
      real procedure sum(i, lo, hi, term);
           value lo, hi; integer i, lo, hi; real term;
           comment term is passed by-name;
      begin real temp; temp := 0;
            for i := lo step 1 until hi do
               temp := temp + term;
            sum := temp
      end;

      print( sum(i, 1, 100, 1/i), 6, 3 )
end

comment works;
procedure Spur(a)Order:(n)Result:(s) ; value n ;
array a ; integer n; real s ;
begin integer k;
s := 0 ;
for k := 1 step 1 until n do s := s + a[k,k]
end

comment works;
procedure Transpose(a)Order:(n); value n;
array a; integer n;
begin real w; integer i,k;
for i:=1 step 1 until n do
for k:= 1 +i step 1 until n do
begin w:= a[i,k];
a[i,k] := a[k,i];
a[k,i]:=w
end
end 

comment works;
procedure innerproduct(a,b)Order:(k,p)Result:(y); value k;
integer k,p ; real y,a,b; comment typo here for real y,a,b, ;
begin real s ;
s:=0;
for p:=1 step 1 until k do s := s+aXb ;
y:=s
end

comment works;
integer procedure Step(u); real u;
Step := if 0 <= u and u <= 1 then 1 else 0

comment works;
procedure Absmax(a)size:(n,m)Result:(y)Subscripts:(i,k);
comment the absolute greatest element of the matrix a, of size n by m
is transferred to y, and the subscripts of this element to i and k;
array a; integer n,m,i,k; real y;
begin integer p,q;
y:=0;
for p:= 1 step 1 until n do for q:=1 step 1 until m do
if abs(a[p,q])>y then b:=1
end

comment works;
procedure Absmax(a)size:(n,m)Result:(y)Subscripts:(i,k);
comment the absolute greatest element of the matrix a, of size n by m
is transferred to y, and the subscripts of this element to i and k;
array a; integer n,m,i,k; real y;
begin integer p,q;
y:=0;
for p:= 1 step 1 until n do for q:=1 step 1 until m do
if abs(a[p,q])>y then begin y:=abs(a[p,q]) ; i:=p ; k:=q
end
end

comment works;
procedure p;
begin
  integer N;
  Read Int(N);
  begin
    real array Data[1:N];
    real sum, avg;
    integer i;
    sum:=0;
    for i:=1 step 1 until N do
      begin real val;
        Read Real(val);
        Data[i]:=if val<0 then -val else val
      end
    for i:=1 step 1 until N do
     sum:=sum + Data[i];
    avg:=sum/N;
    Print Real(avg)
  end
end

