IV. Verification and Validation Documentation

IV.1 Test Plan
Go through each pattern and supply valid or invalid input. Check that
the output generated is correct. Check that the program gave the right
answer in a sufficient amount of time. Improve execution time if it is
unsatisfactory, check and correct related patterns if output was
incorrect. Develop a list of test cases used on the program. For
each test case test a particular "Pattern Type". Supply input that the
Algol 60 report listed as example input, or create more test
cases. The pattern corresponding to "Pattern Type" is should be used
in the program and its execution time recorded. Start the test cases
with simple patterns and progressively move on to more complex
patterns. Within each pattern, the input starts with a simple example
and then more difficult variations should be used.

IV.2 Test Results
In the following tests, the pattern type is listed that was used for
matching the input. Next the input is listed and the corresponding
output. If the listed pattern was matched to the input, a "Yes" is the
output, if it was not then a "No" is the output. The expected output
is listed and the time is recorded for each test for reference
purposes. 

--------------------------------------------------------------------------------
Pattern Type: IDENTIFIER
Input: q
Output: Yes
Expected Value: Yes
Time: 0m0.005s

--------------------------------------------------------------------------------
Pattern Type: IDENTIFIER
Input: Soup
Output: Yes
Expected Value: Yes
Time: 0m0.005s

--------------------------------------------------------------------------------
Pattern Type: IDENTIFIER
Input: V17a
Output: Yes
Expected Value: Yes
Time: 0m0.005s

--------------------------------------------------------------------------------
Pattern Type: IDENTIFIER
Input: a34TMNs
Output: Yes
Expected Value: Yes
Time: 0m0.005s

--------------------------------------------------------------------------------
Pattern Type: IDENTIFIER
Input: MARILYN
Output: Yes
Expected Value: Yes
Time: 0m0.005s

--------------------------------------------------------------------------------
Pattern Type: IDENTIFIER
Input: 888ff	comment not valid, should return "No";
Output: No
Expected Value: No
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: IDENTIFIER
Input: a+b
Output: No
Expected Value: No
Time: 0m0.115s

--------------------------------------------------------------------------------
Pattern Type: IDENTIFIER
Input: aaaaaa;
Output: No
Expected Value: No
Time: 0m0.099s

--------------------------------------------------------------------------------
Pattern Type: NUMBER
Input: 0
Output: Yes
Expected Value: Yes
Time: 0m0.005s

--------------------------------------------------------------------------------
Pattern Type: NUMBER
Input: 177
Output: Yes
Expected Value: Yes
Time: 0m0.005s

--------------------------------------------------------------------------------
Pattern Type: NUMBER
Input: .5384
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: NUMBER
Input: +0.7300
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: NUMBER
Input: -200.084
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: NUMBER
Input: -9999999999999999999999200.0848888888888888888888888888888888
Output: Yes
Expected Value: Yes
Time: 0m0.005s

--------------------------------------------------------------------------------
Pattern Type: NUMBER
Input: -.083-03 comment actually two numbers ;
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: NUMBER
Input: apple
Output: No
Expected Value: No
Time: 0m0.123s

--------------------------------------------------------------------------------
Pattern Type: NUMBER
Input: 3a
Output: No
Expected Value: No
Time: 0m0.121s

--------------------------------------------------------------------------------
Pattern Type: NUMBER
Input: 3.a
Output: No
Expected Value: No
Time: 0m0.121s

--------------------------------------------------------------------------------
Pattern Type: STRING
Input: 'fljeie0824nwociwohueuhfwefbfpweqoiu////'
Output: Yes
Expected Value: Yes
Time: 0m0.005s

--------------------------------------------------------------------------------
Pattern Type: STRING
Input: 'fljeie0824nwociwohueuhfwefbfpweqoiu////fljeie08
	   24nwociwohueuhf
	   wefbfpweqoiu////fljeie0824nwociwohueuhfwefbfpweqoiu////'   
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: STRING
Input: apple
Output: No
Expected Value: No
Time: 0m0.134s

--------------------------------------------------------------------------------
Pattern Type: STRING
Input: 'apple''
Output: No
Expected Value: No
Time: 0m0.129s

--------------------------------------------------------------------------------
Pattern Type: STRING
Input: 'apple"'
Output: Yes
Expected Value: Yes
Time: 0m0.109s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: epsilon
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: detA
Output: Yes
Expected Value: Yes
Time: 0m0.005s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: 'apple'
Output: No
Expected Value: No
Time: 0m0.115s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: 1apple
Output: No
Expected Value: No
Time: 0m0.119s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: apple+orange
Output: No
Expected Value: No
Time: 0m0.143s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: a23038fjffffffffffffffffffa130311030831301317
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: Q[2]
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: Q[7,2]
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: 1appleXorange[b]
Output: No
Expected Value: No
Time: 0m0.137s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: Qqqqqqqqqqqqqqqqqqqqqqqqqqqqqq[7,2,4,2,2,4,6]
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: xxxxx[sin(nXpi/2),QQQQQQQQ[3,n,4]]
Output: Yes
Expected Value: Yes
Time: 0m0.024s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: xxxxx[sin(nXpi/2),QQQQQQQQ[3,n,4,]]
Output: No
Expected Value: No
Time: 0m0.437s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: xxxxx[sin(nXpi/2/),QQQQQQQQ[3,n,4]]
Output: No
Expected Value: No
Time: 0m0.442s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: x[Q[sin(nXpi/2)],Q[3,n,4,4,3,5,4]]
Output: Yes
Expected Value: Yes
Time: 0m0.008s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: x[Q[sin(nXpi/2)],Q[3888888888888888888888888,n,4,4,3,5,4]]
Output: Yes
Expected Value: Yes
Time: 0m0.011s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: x[Q[sin(sin(nXpi/2nXpi2)],Q[3888888888888888888888888,n,4,4,3,5,4]]
Output: No
Expected Value: No
Time: 0m0.072s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: x[Q[sin(sin(nXpi/2nXpi2))],Q[3888888888888888888888888,n,4,4,3,5,4]]
Output: Yes
Expected Value: Yes
Time: 0m0.019s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: x[Q[sin(sin(nXpi/2nXpi2))],Q[3888888888888888888888888,n,4,4,3,5,4]]]
Output: No
Expected Value: No
Time: 0m0.551s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: x[Q[sin(sin(nXpi/2nXpi2))],Q[3888888888888888888888888,1n,4,4,3,5,4]]
Output: No
Expected Value: No
Time: 0m0.127s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input:
x[Q[sin(sin(nXpi/2nXpi2))],1Q[3888888888888888888888888,1,4,4,3,5,4]]
Output: No
Expected Value: No
Time: 0m8.509s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: x[Q[sin(sin(nXpi/2nXpi2))],Q[3888888888888888888888888,1,4,4,3,5,4b]]
Output: No
Expected Value: No
Time: 0m0.116s

--------------------------------------------------------------------------------
Pattern Type: VARIABLE
Input: x[Q[sin(sin(nXpi/2nXpi2))],Q[388b8888888888888888888888,1,4,4,3,5,4]]
Output: No
Expected Value: No
Time: 0m0.144s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: R
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: sin(a-b)
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: sin(a-3b)
Output: No
Expected Value: No
Time: 0m0.122s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: sin(3a-b)
Output: No
Expected Value: No
Time: 0m0.126s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: J(v+s,n)
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: J(v+s+,n)
Output: No
Expected Value: No
Time: 0m0.122s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: S(s-5)Temperature:(T)Pressure:(P)
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: S(s-5)Temperature:(T)P3ressure:(P)
Output: Yes
Expected Value: Yes
Time: 0m0.137s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: S(s-5)0Temperature:(T)Pressure:(P)
Output: No
Expected Value: No
Time: 0m0.119s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: S(s-5)Temperature:(T):Pressure:(P)
Output: No
Expected Value: No
Time: 0m0.131s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: S(s-5)Temperature(T)Pressure:(P) comment two function designators;
Output: Yes
Expected Value: Yes
Time: 0m0.145s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: Compile(' := ')Stack:(Q)
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: S(s-5)Temperature:(T)Pressure:(P)Temperature:(T)Pressure:(P)Pressure:(P)
Output: Yes
Expected Value: Yes
Time: 0m0.022s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: J(v+s,n,v+s,n,n,v+s,n,n,v+s,n,n,v+s,n,n,v+s,n,n,v+s,n,n,v+s,n)
Output: Yes
Expected Value: Yes
Time: 0m0.019s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: Compile(' := ')Stack:(Q,n,n,v+s,n,n,v+s,n,nn,n,v+s,n,n,v+s,n,
n,v+s,v+s,n)Temperature:(T)Pressure:(P)Temperature:(T)Pressure:(P)Press
ure:(P)
Output: Yes
Expected Value: Yes
Time: 0m0.185s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: Compile(' := ')Stack:(Q,n,n,v+s,n,n,v+s,n,nn,n,v+s,n,n,v+s,n,
n,v+s,v+s-,n)Temperature:(T)Pressure:(P)Temperature:(T)Pressure:(P)Press
ure:(P)
Output: No
Expected Value: No
Time: 0m0.118s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: Compile(' := ')Stack:(Q,n,n,v+s,n,n,v+s,n,nn,n,v+s,n,n,v+s,n,
n,v+s,v+s,)Temperature:(T)Pressure:(P)Temperature:(T)Pressure:(P)Press
ure:(P)
Output: No
Expected Value: No
Time: 0m0.132s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: Compile(' := ')Stack:(Q,n,n,v+s,n,n,v+s,n,nn,n,v+s,n,n,v+s,n,
n,v+s,v+s)Temperature:((T)Pressure:(P)Temperature:(T)Pressure:(P)Press
ure:(P)
Output: No
Expected Value: No
Time: 0m35.247s

--------------------------------------------------------------------------------
Pattern Type: FUNCTION_DESIGNATOR
Input: Compile(' := ')Stack:(Q,n,n,v+s,n,n,v+s,n,nn,n,v+s,n,n,v+s,n,
n,v+s,v+s)Temperature:(T))Pressure:(P)Temperature:(T)Pressure:(P)Press
ure:(P)
Output: No
Expected Value: No
Time: 0m1.241s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: 7.394-8
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: 7.394--8
Output: Yes
Expected Value: Yes
Time: 0m0.115s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: 7.394-+8
Output: Yes
Expected Value: Yes
Time: 0m0.134s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: 7.394-+-8
Output: No
Expected Value: No
Time: 0m0.127s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: 7.394//8
Output: No
Expected Value: No
Time: 0m0.115s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: 7.394//-8
Output: No
Expected Value: No
Time: 0m0.121s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: 7.394/-8
Output: Yes
Expected Value: Yes
Time: 0m0.111s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: sum
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: w[i+2,8]
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: w[i++2,8]
Output: Yes
Expected Value: Yes
Time: 0m0.131s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: w[i+2,8/]
Output: No
Expected Value: No
Time: 0m0.123s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: cos(y+zX3)
Output: Yes
Expected Value: Yes
Time: 0m0.008s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: cos(X/X/X/-X/X/X/X/X/X)
Output: No
Expected Value: No
Time: 0m0.412s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: (a-3/y+vu^8)
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: (a-3/y+vu^8^b^3^a^9^)
Output: No
Expected Value: No
Time: 0m0.164s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: sum^cos(y+zX3)
Output: Yes
Expected Value: Yes
Time: 0m0.012s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: sum^cos(y+zX3)+(a-3/y+vu^8)+cos(y+zX3)+w[i+2,8]
Output: Yes
Expected Value: Yes
Time: 0m0.049s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: sum^cos(y+zX3)+(a-3/y+vu^8b)+cos(y+zX--3)+w[i+2,8]
Output: No
Expected Value: No
Time: 0m0.113s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: 7.394 - 8^w[i+2,8]^(a-3/y + vu ^8 )
Output: Yes
Expected Value: Yes
Time: 0m0.012s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: omegaXsum^cos(y+zX3)/7.934-8^w[i+2,8]^(a-3/y+vu-8)	
Output: Yes
Expected Value: Yes
Time: 0m0.052s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: U-Yu+omegaXsum^cos(y+zX3)/7.934-8^w[i+2,8]^(a-3/y+vu^8)
Output: Yes
Expected Value: Yes
Time: 0m0.053s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: wXu-Q(S+Cu)^2
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: if q > 0 then S+3XQ/A else 2XS + 3Xqn
Output: Yes
Expected Value: Yes
Time: 0m0.119s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: if q >> 0 then S+3XQ/A else 2XS + 3Xqn 
Output: No
Expected Value: No
Time: 0m0.154s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: if q > 0 then S+3XQ/A elelseelsese 2XS + 3Xqn 
Output: Yes
Expected Value: Yes
Time: 0m0.150s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: ifa< 0thenU+V else if aXb > 17 then U/V else if k \= y then V/U
else 0 
Output: Yes
Expected Value: Yes
Time: 0m0.182s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: ifa< 0thenU+V else if aXb > 17 then U/V else if k \= y then V/U
Output: No
Expected Value: No
Time: 0m0.213s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: ifa< 0thenU+V else else if aXb > 17 then U/V else if k \= y
then V/U else 0 
Output: Yes
Expected Value: Yes
Time: 0m0.252s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: aXsin(omegaXt)
Output: Yes
Expected Value: Yes
Time: 0m0.019s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: 0.5712Xa[nX(N-1)/2,0]
Output: Yes
Expected Value: Yes
Time: 0m0.026s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: 0.d5712Xa[nX(N-1)/2,0]
Output: No
Expected Value: No
Time: 0m0.147s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: (AXrctan(y) + Z) ^(7+Q)
Output: Yes
Expected Value: Yes
Time: 0m0.096s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: if q then n - 1 else n
Output: Yes
Expected Value: Yes
Time: 0m0.008s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: if q then n - 1 else nelse
Output: No
Expected Value: No
Time: 0m0.129s

--------------------------------------------------------------------------------
Pattern Type: ARITHMETIC_EXPRESSION
Input: if a < 0 then A/B else if b = 0 then B/A else z
Output: Yes
Expected Value: Yes
Time: 0m0.044s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: y = -1
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: Y > V or z < q
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: Y > V orand z < q
Output: Yes
Expected Value: Yes
Time: 0m0.134s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: Y > V  < q
Output: No
Expected Value: No
Time: 0m0.128s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: a+b > -5 and z - d > q ^2
Output: Yes
Expected Value: Yes
Time: 0m0.034s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: a+b > -5 and z - d > q and ^2
Output: No
Expected Value: No
Time: 0m0.124s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: if a < 0 then A/B else if b = 0 then B/A else z
Output: No
Expected Value: No
Time: 0m0.439s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: p and q or x \=y
Output: Yes
Expected Value: Yes
Time: 0m0.012s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: p and b<>q or x \=y
Output: No
Expected Value: No
Time: 0m0.149s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: g == not a and b and not c or d or e -> not f
Output: Yes
Expected Value: Yes
Time: 0m0.216s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: g == not a and b and not c or d or e -> not f and a and b and c 
Output: Yes
Expected Value: Yes
Time: 0m0.945s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: g === not a and b and not c or d or e -> not f and a and b and
c 
Output: No
Expected Value: No
Time: 0m0.223s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: g == not a and b and not c or d or e -> not f -> andandandand c 
Output: Yes
Expected Value: Yes
Time: 0m0.303s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: g == not a and b and not c or d or e -> not f -> -> andandandand c 
Output: No
Expected Value: No
Time: 0m0.394s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: if k<1 then s>w else h <= c
Output: Yes
Expected Value: Yes
Time: 0m0.010s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: if k<1 then s>w else h <=> c
Output: No
Expected Value: No
Time: 0m0.117s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: if k<1 then s><w else helse == c
Output: No
Expected Value: No
Time: 0m0.208s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: if if if a then b else c then d else f then g else h < k
Output: Yes
Expected Value: Yes
Time: 0m0.036s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: if if if if if if a then b else c then d else f then g else h < k
Output: Yes
Expected Value: Yes
Time: 0m0.140s

--------------------------------------------------------------------------------
Pattern Type: BOOLEAN_EXPRESSION
Input: Y > V or z < q or a+b > -5 and z - d > q ^2 and p and q or x
\=y or g == not a and b and not c or d or e -> not f 
Output: Yes
Expected Value: Yes
Time: 0m8.192s

--------------------------------------------------------------------------------
Pattern Type: DESIGNATIONAL_EXPRESSION
Input: 17
Output: Yes
Expected Value: Yes
Time: 0m0.005s

--------------------------------------------------------------------------------
Pattern Type: DESIGNATIONAL_EXPRESSION
Input: p9
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: DESIGNATIONAL_EXPRESSION
Input: Choose[n-1]
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: DESIGNATIONAL_EXPRESSION
Input: Choose[1n-1]
Output: No
Expected Value: No
Time: 0m0.111s

--------------------------------------------------------------------------------
Pattern Type: DESIGNATIONAL_EXPRESSION
Input: Town[if y < 0 then N else N+1]
Output: Yes
Expected Value: Yes
Time: 0m0.008s

--------------------------------------------------------------------------------
Pattern Type: DESIGNATIONAL_EXPRESSION
Input: Town[if y < 0 then N-- else N+1]
Output: No
Expected Value: No
Time: 0m0.143s

--------------------------------------------------------------------------------
Pattern Type: DESIGNATIONAL_EXPRESSION
Input: if Ab < c then 17 else q[if w <= 0 then 2 else n]
Output: Yes
Expected Value: Yes
Time: 0m0.164s

--------------------------------------------------------------------------------
Pattern Type: DESIGNATIONAL_EXPRESSION
Input: if Ab < c then 17 else q[if w <= 0b then 2 else n]
Output: No
Expected Value: No
Time: 0m0.202s

--------------------------------------------------------------------------------
Pattern Type: BASIC_STATEMENT
Input: a := p+q
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: BASIC_STATEMENT
Input: a = p+q
Output: No
Expected Value: No
Time: 0m0.116s

--------------------------------------------------------------------------------
Pattern Type: BASIC_STATEMENT
Input: go to Naples
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: BASIC_STATEMENT
Input: go to Hell now + 2
Output: No
Expected Value: No
Time: 0m0.129s

--------------------------------------------------------------------------------
Pattern Type: BASIC_STATEMENT
Input: START: CONTINUE: W:=7.993
Output: Yes
Expected Value: Yes
Time: 0m0.012s

--------------------------------------------------------------------------------
Pattern Type: BASIC_STATEMENT
Input: START: CONTINUE: 1W:=7.993
Output: No
Expected Value: No
Time: 0m0.142s

--------------------------------------------------------------------------------
Pattern Type: BASIC_STATEMENT
Input: START: 1CONTINUE: W:=7.993
Output: No
Expected Value: No
Time: 0m0.141s

--------------------------------------------------------------------------------
Pattern Type: BASIC_STATEMENT
Input: a := pXq+fffa+e+q/fXaDXkg+s-so
Output: Yes
Expected Value: Yes
Time: 0m0.015s

--------------------------------------------------------------------------------
Pattern Type: COMPOUND_STATEMENT
Input: 
begin x:=0 ; for y := 1 step 1 until n do x:= x+A[y]; if x > q then go
to STOP else if x > w - 2 then go to S; Aw: St: W: = x+bob end
Output: Yes
Expected Value: Yes
Time: 0m0.662s

--------------------------------------------------------------------------------
Pattern Type: COMPOUND_STATEMENT
Input: 
begin x:=0 b:=2 ; for y := 1 step 1 until n do x:= x+A[y]; if x > q then go
to STOP else if x > w - 2 then go to S; Aw: St: W: = x+bob end
Output: No
Expected Value: No
Time: 0m0.253s

--------------------------------------------------------------------------------
Pattern Type: COMPOUND_STATEMENT
Input: 
begin x:=0 ; iffor y := 1 step 1 until n do x:= x+A[y]; if x > q then go
to STOP else if x > w - 2 then go to S; Aw: St: W: = x+bob end
Output: Yes
Expected Value: Yes
Time: 0m0.807s

--------------------------------------------------------------------------------
Pattern Type: COMPOUND_STATEMENT
Input: 
begin x:=0 ; iffor y := 1 step 1 until n do x:= x+A[y]; if x > q then go
to STOP else if x > w - 2 then go 0to S; Aw: St: W: = x+bob end
Output: No
Expected Value: No
Time: 0m12.533s

--------------------------------------------------------------------------------
Pattern Type: COMPOUND_STATEMENT
Input: 
begin x:=0 ; iffor y := 1 step 1 until n do x:= x+A[y]; if x > q then go
to STOP else if x > w - 2 then go to S; Aw: 1St: W: = x+bob end
Output: No
Expected Value: No
Time: 0m12.249s

--------------------------------------------------------------------------------
Pattern Type: BLOCK
Input:
Q: begin integer i,k; real w; for i:= 1 step 1 until m do for k:=i+1
step 1 until m do begin w := A[i,k] ; A[i,k] := A[k,i] ; A[k,i] := w
end for i and k end
Output: Yes
Expected Value: Yes
Time: 0m0.188s

--------------------------------------------------------------------------------
Pattern Type: BLOCK
Input:
Q: begin integer i,k; real w; for i::= 1 step 1 until m do for k:=i+1
step 1 until m do begin w := A[i,k] ; A[i,k] := A[k,i] ; A[k,i] := w
end for i and k end 
Output: No
Expected Value: No
Time: 0m0.272s

--------------------------------------------------------------------------------
Pattern Type: BLOCK
Input:
Q: begin integer i,k; real w; for i:== 1 step 1 until m do for k:=i+1
step 1 until m do begin w := A[i,k] ; A[i,k] := A[k,i] ; A[k,i] := w
end for i and k end 
Output: No
Expected Value: No
Time: 0m0.316s

--------------------------------------------------------------------------------
Pattern Type: BLOCK
Input:
Q: begin integer i,k; real w; for i:= 1 step 1 until m do for k:=i+1
step 1 until m do begin w := A[i,k] ; A[i,[k]] := A[k,i] ; A[k,i] := w
end for i and k end 
Output: No
Expected Value: No
Time: 0m1.092s

--------------------------------------------------------------------------------
Pattern Type: ASSIGNMENT_STATEMENT
Input: s := p[0] := n := n+1+s
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: ASSIGNMENT_STATEMENT
Input: s := p[0] := n := n+1+s :=
Output: No
Expected Value: No
Time: 0m0.123s

--------------------------------------------------------------------------------
Pattern Type: ASSIGNMENT_STATEMENT
Input: n := n+1
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: ASSIGNMENT_STATEMENT
Input: n := n+1+1n
Output: No
Expected Value: No
Time: 0m0.134s

--------------------------------------------------------------------------------
Pattern Type: ASSIGNMENT_STATEMENT
Input: A : = B/C - v -q Xs
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: ASSIGNMENT_STATEMENT
Input: A : = B/C - v -1q Xs
Output: No
Expected Value: No
Time: 0m0.162s

--------------------------------------------------------------------------------
Pattern Type: ASSIGNMENT_STATEMENT
Input: s[v,k+2] := 3 - arctan(sXzeta)
Output: Yes
Expected Value: Yes
Time: 0m0.030s

--------------------------------------------------------------------------------
Pattern Type: ASSIGNMENT_STATEMENT
Input: V := Q> Y and Z comment issue with this statement; 
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: GOTO_STATEMENT
Input: gotoHell
Output: Yes
Expected Value: Yes
Time: 0m0.008s

--------------------------------------------------------------------------------
Pattern Type: GOTO_STATEMENT
Input: go to 8
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: GOTO_STATEMENT
Input: go to exit [n+1]
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: GOTO_STATEMENT
Input: go to Town[if y<0 then N else N+1]
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: GOTO_STATEMENT
Input: go to if Ab<c then 17 else q[if w < 0 then 2 else n]
Output: Yes
Expected Value: Yes
Time: 0m0.089s

--------------------------------------------------------------------------------
Pattern Type: DUMMY_STATEMENT
Input: John:
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: DUMMY_STATEMENT
Input: J8ohn:
Output: Yes
Expected Value: Yes
Time: 0m0.120s

--------------------------------------------------------------------------------
Pattern Type: DUMMY_STATEMENT
Input: 1J8ohn:
Output: No
Expected Value: No
Time: 0m0.142s

--------------------------------------------------------------------------------
Pattern Type: DUMMY_STATEMENT
Input: :
Output: No
Expected Value: No
Time: 0m0.116s

--------------------------------------------------------------------------------
Pattern Type: CONDITIONAL_STATEMENT
Input: if x > 0 then n:= n+1
Output: Yes
Expected Value: Yes
Time: 0m0.008s

--------------------------------------------------------------------------------
Pattern Type: CONDITIONAL_STATEMENT
Input: if v > u then V:q:=n+m else go to R
Output: Yes
Expected Value: Yes
Time: 0m0.034s

--------------------------------------------------------------------------------
Pattern Type: CONDITIONAL_STATEMENT
Input: 
if s < 0 or P < = Q then AA:begin if q<v then a:= v/s
   else y:=2Xa end
   else if v>s then a:= v-q else if v > s-1
   then go to S
Output: Yes
Expected Value: Yes
Time: 0m7.964s

--------------------------------------------------------------------------------
Pattern Type: CONDITIONAL_STATEMENT
Input: 
if s < 0 or P < = Q then AA:begin if q<v then a:= v/s
   else y:=:2Xa end
   else if v>s then a:= v-q else if v > s-1
   then go to S
Output: No
Expected Value: No
Time: 0m0.124s

--------------------------------------------------------------------------------
Pattern Type: CONDITIONAL_STATEMENT
Input: 
if s < 0 or P < = Q then AA:begin if q<v then a:= v/s
   else y:=2Xa end
   else if v>:s then a:= v-q else if v > s-1
   then go to S
Output: No
Expected Value: No
Time: 0m0.146s

--------------------------------------------------------------------------------
Pattern Type: FOR_STATEMENT
Input: for q : = 1 step s until n do A[q] := B[q]
Output: Yes
Expected Value: Yes
Time: 0m0.010s

--------------------------------------------------------------------------------
Pattern Type: FOR_STATEMENT
Input: 
for k:= 1, V1X2 while V1 < N do
	for j:= 1+G, L, 1 step 1 until N, C+D do
	A[k,j] := B[k,j]
Output: Yes
Expected Value: Yes
Time: 0m0.680s

--------------------------------------------------------------------------------
Pattern Type: FOR_STATEMENT
Input: 
for k:= 1, V1X2 while V1 < N do
	for j:= 1+:G, L, 1 step 1 until N, C+D do
	A[k,j] := B[k,j]
Output: No
Expected Value: No
Time: 0m1.428s

--------------------------------------------------------------------------------
Pattern Type: FOR_STATEMENT
Input: 
for k:= 1, V1X2 while V1 < N do
	for j:= 1+G, L, 1 ,step 1 until N, C+D do
	A[k,j] := B[k,j]
Output: No
Expected Value: No
Time: 0m0.389s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_STATEMENT
Input: Spur (A)Order: (7)Result to:(V)
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_STATEMENT
Input: Transpose(W,v+1)
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_STATEMENT
Input: Absmax(A,N,M,yY,1,K)
Output: Yes
Expected Value: Yes
Time: 0m0.009s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_STATEMENT
Input: Absmax(A,N,M,yY,1,K[])
Output: No
Expected Value: No
Time: 0m0.126s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_STATEMENT
Input: Innerproduct(A[t,P,u],B[P],10,P,Y)
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_STATEMENT
Input: Innerproduct(A[A[t,P,u]A[t,P,u]t,P,u],B[P],10,P,Y)
Output: No
Expected Value: No
Time: 0m0.118s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_STATEMENT
Input: Innerproduct(A[t,P,u],B[P]1,10,P,Y)
Output: No
Expected Value: No
Time: 0m0.141s

--------------------------------------------------------------------------------
Pattern Type: TYPE_DECLARATION
Input: integer p,q,s
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: TYPE_DECLARATION
Input: integer p,q,1
Output: No
Expected Value: No
Time: 0m0.110s

--------------------------------------------------------------------------------
Pattern Type: TYPE_DECLARATION
Input: own Boolean Acryl,n
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: TYPE_DECLARATION
Input: own integer 9
Output: No
Expected Value: No
Time: 0m0.168s

--------------------------------------------------------------------------------
Pattern Type: TYPE_DECLARATION
Input: own Boolean Acryl,n+1
Output: No
Expected Value: No
Time: 0m0.132s

--------------------------------------------------------------------------------
Pattern Type: ARRAY_DECLARATION
Input: array a,b,c[7:n,2:m], s[-2:10]
Output: Yes
Expected Value: Yes
Time: 0m0.013s

--------------------------------------------------------------------------------
Pattern Type: ARRAY_DECLARATION
Input: array a,b,c[7:n,2:m], s[-2:1j10]
Output: No
Expected Value: No
Time: 0m0.134s

--------------------------------------------------------------------------------
Pattern Type: ARRAY_DECLARATION
Input: array a,b,c[7:n,2:m], s[-2:j,10]
Output: No
Expected Value: No
Time: 0m0.120s

--------------------------------------------------------------------------------
Pattern Type: ARRAY_DECLARATION
Input: own integer array A[if c<0 then 2 else 1:20]
Output: Yes
Expected Value: Yes
Time: 0m0.013s

--------------------------------------------------------------------------------
Pattern Type: ARRAY_DECLARATION
Input: real array q[-7:-1]
Output: Yes
Expected Value: Yes
Time: 0m0.007s

--------------------------------------------------------------------------------
Pattern Type: ARRAY_DECLARATION
Input: array a,b,c[7:n,2:m,2:m,2:m,2:m,2:m,2:m], s[-2:10,-2:10,-2:10]
Output: Yes
Expected Value: Yes
Time: 0m0.055s

--------------------------------------------------------------------------------
Pattern Type: ARRAY_DECLARATION
Input: array a,b,c[7:n,2:m,2:m,2:m,2:m,2:m,2:m], s[-2:10,-2:10,--2:10]
Output: No
Expected Value: No
Time: 0m0.146s

--------------------------------------------------------------------------------
Pattern Type: ARRAY_DECLARATION
Input: array a,b,c[7:n,2:m,2:m,2:m,2:m,2:m,2:m], s[:10,-2:10,2:10]
Output: No
Expected Value: No
Time: 0m0.112s

--------------------------------------------------------------------------------
Pattern Type: ARRAY_DECLARATION
Input: array a,b,c[7:n,2:m,2:m,2:m,2:m,2:m,2:], s[9:10,-2:10,2:10]
Output: No
Expected Value: No
Time: 0m0.123s

--------------------------------------------------------------------------------
Pattern Type: SWITCH_DECLARATION
Input: switch Q:=p1,w
Output: Yes
Expected Value: Yes
Time: 0m0.006s

--------------------------------------------------------------------------------
Pattern Type: SWITCH_DECLARATION
Input: switch Q:=p1,w,1
Output: Yes
Expected Value: Yes
Time: 0m0.137s

--------------------------------------------------------------------------------
Pattern Type: SWITCH_DECLARATION
Input: switch Q:=p1,w-1,1
Output: No
Expected Value: No
Time: 0m0.123s

--------------------------------------------------------------------------------
Pattern Type: SWITCH_DECLARATION
Input: switch Q:=p1,w_1,1
Output: No
Expected Value: No
Time: 0m0.119s

--------------------------------------------------------------------------------
Pattern Type: SWITCH_DECLARATION
Input: switch Q:=f:=p1,w1,1
Output: No
Expected Value: No
Time: 0m0.135s

--------------------------------------------------------------------------------
Pattern Type: SWITCH_DECLARATION
Input: switch S:= S1,S2,Q[m], if v > -5 then S3 else S4
Output: Yes
Expected Value: Yes
Time: 0m0.010s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
comment works;
procedure p;
begin
   print(123, -10, +4.0);
   outstring(1, 'hello\nhello\n')
end
Output: Yes
Expected Value: Yes
Time: 0m0.185s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
procedure p;
begin
   print(123, -10, +4.0);
   outstring(1, 'hello\nhello\n');
end
Output: No
Expected Value: No
Time: 0m0.829s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
comment works;
procedure p;
begin integer i; comment this is a comment up top;

      comment here is another comment;
	  a:=4;
      print( sum(i, 1, 100, 1/i), 6, 3 )
end
Output: Yes
Expected Value: Yes
Time: 0m0.185s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
procedure p;
begin integer i; comment this is a comment up top;

      comment here is another comment;
	  a:=4;
      print( ()sum(i, 1, 100, 1/i), 6, 3 )
end
Output: No
Expected Value: No
Time: 0m0.265s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
comment works;
procedure p;
begin integer i; comment this is a comment up top;

      comment here is another comment;
      real procedure sum(i, lo, hi, term);
           value lo, hi; integer i, lo, hi; real term;
           comment term is passed by-name;
      begin real temp; temp := 0;
            for i := lo step 1 until hi do
               temp := temp + term;
            sum := temp
      end;

      print( sum(i, 1, 100, 1/i), 6, 3 )
end
Output: Yes
Expected Value: Yes
Time: 0m0.774s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
begin integer i; comment this is a comment up top;

      comment here is another comment;
      real procedure sum(i, lo, hi, term);
           value lo, hi; integer i, lo, hi; real term;
           comment term is passed by-name;
      begin real temp; temp := 0;
            for i := lo step 1 until hi do
               temp := temp + term;
            sum := temp
      end;

      print( sum(i, 1, 100, 1/i), 6, 3 )
end
Output: No
Expected Value: No
Time: 0m0.855s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
Procedure i;begin integer i; comment this is a comment up top;

      comment here is another comment;
      real pocedure sum(i, lo, hi, term);
           value lo, hi; integer i, lo, hi; real term;
           comment term is passed by-name;
      begin real temp; temp := 0;
            for i := lo step 1 until hi do
               temp := temp + term;
            sum := temp
      end;

      print( sum(i, 1, 100, 1/i), 6, 3 )
end
Output: No
Expected Value: No
Time: 0m20.303s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
comment works;
procedure Spur(a)Order:(n)Result:(s) ; value n ;
array a ; integer n; real s ;
begin integer k;
s := 0 ;
for k := 1 step 1 until n do s := s + a[k,k]
end
Output: Yes
Expected Value: Yes
Time: 0m0.341s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
procedure Spur(a)Order:(n)Result:(s) ; value n ;
array a ; integer n; real s ;
begin integer k;
s := 0 ;
for k := 1 stop 1 until n do s := s + a[k,k]
end
Output: No
Expected Value: No
Time: 0m0.417s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
procedure Spur(a)Order:(n)Result:(s) ; value n ;
array a ; integer n; real s ;
begin own integer k;
s := 0 ;
for k := 1 step 1 until n do s := s + a[k,k]
end
Output: Yes
Expected Value: Yes
Time: 0m0.337s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
procedure Spur(a)Order:(n)Result:(s) ; value n ;
array a ; own integer n; real s ;
begin own integer k;
s := 0 ;
for k := 1 step 1 until n do s := s + a[k,k]
end
Output: No
Expected Value: No
Time: 0m0.441s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
comment works;
procedure Transpose(a)Order:(n); value n;
array a; integer n;
begin real w; integer i,k;
for i:=1 step 1 until n do
for k:= 1 +i step 1 until n do
begin w:= a[i,k];
a[i,k] := a[k,i];
a[k,i]:=w
end
end 
Output: Yes
Expected Value: Yes
Time: 0m0.714s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
comment works;
procedure Transpose(a)Order:(n); value n;
array a; integer n;
begin real w; integer i,k;
for i:=1 step 1 until n do
for k:= 1 +i step 1 until n do
begin w:= a[i,k]
a[i,k] := a[k,i];
a[k,i]:=w
end
end 
Output: No
Expected Value: No
Time: 0m0.119s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
comment works;
procedure innerproduct(a,b)Order:(k,p)Result:(y); value k;
integer k,p ; real y,a,b; comment typo here for real y,a,b, ;
begin real s ;
s:=0;
for p:=1 step 1 until k do s := s+aXb ;
y:=s
end
Output: Yes
Expected Value: Yes
Time: 0m0.503s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
procedure innerproduct(a,b)Order:(k,p)Result:(y); value k;
integer k,p ; real y,a,b; comment typo here for real y,a,b, ;
begin real s ;
s:=0
for p:=1 step 1 until k do s := s+aXb ;
y:=s
end
Output: No
Expected Value: No
Time: 0m0.515s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
comment works;
integer procedure Step(u); real u;
Step := if 0 <= u and u <= 1 then 1 else 0
Output: Yes
Expected Value: Yes
Time: 0m0.127s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
own integer procedure Step(u); real u;
Step := if 0 <= u and u <= 1 then 1 else 0
Output: No
Expected Value: No
Time: 0m0.223s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
comment works;
procedure Absmax(a)size:(n,m)Result:(y)Subscripts:(i,k);
comment the absolute greatest element of the matrix a, of size n by m
is transferred to y, and the subscripts of this element to i and k;
array a; integer n,m,i,k; real y;
begin integer p,q;
y:=0;
for p:= 1 step 1 until n do for q:=1 step 1 until m do
if abs(a[p,q])>y then b:=1
end
Output: Yes
Expected Value: Yes
Time: 0m0.787s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
comment works;
procedure Absmax(a)size:(n,m)Result:(y)Subscripts:(i,k);
comment the absolute greatest element of the matrix a, of size n by m
is transferred to y, and the subscripts of this element to i and k;
array a; integer n,m,i,k; real y;
begin integer p,q;
y:=0;
for p:= 1 step 1 until n do for q:=1 step 1 until m do
if abs(a[p,q])>y then begin y:=abs(a[p,q]) ; i:=p ; k:=q
end
end
Output: Yes
Expected Value: Yes
Time: 0m8.901s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
comment works;
procedure p;
begin
  integer N;
  Read Int(N);
  begin
    real array Data[1:N];
    real sum, avg;
    integer i;
    sum:=0;
    for i:=1 step 1 until N do
      begin real val;
        Read Real(val);
        Data[i]:=if val<0 then -val else val
      end
    for i:=1 step 1 until N do
     sum:=sum + Data[i];
    avg:=sum/N;
    Print Real(avg)
  end
end
Output: Yes
Expected Value: Yes
Time: 0m10.220s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
procedure p;
begin
  integer N;
  Read Int(N);
  begin
    real array Data[1:N];
    real sum, avg;
    integer i;
    sum:=0;
    for i:=1 step 1 until N do
      begin real val;
        Read Real(val);
        Data[i]:=if val<0 then -val else val
      end
    for i:=1 step 1 until N do
     sum:=sum + Data[i];
    avg:=sum/N;
    Print Real(avg)
  end;
end
Output: No
Expected Value: No
Time: 1m31.385s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
procedure p;
begin
  integer N;
  Read Int(N);
  begin
    real array Data[1:N];
    real sum, avg;
    integer i;
    sum:=0;
    for i:=1 step 1 until N do
      begin real val;
        Read Real(val);
        Data[i]:=if val<0 then -val else val
      end;
    for i:=1 step 1 until N do
     sum:=sum + Data[i];
    avg:=sum/N;
    Print Real(avg)
  end
end
Output: No
Expected Value: No
Time: 0m3.853s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
procedure p;
begin
  integer N;
  Read Int(N);
  begin
    real array Data[1:N];
    real sum, avg;
    integer i;
    sum:=0;
    for i:=1 step 1 until N do
      begin real val;
        Read Real(val);
        Data[i]:=if val<0 then -val else val
      end
    for i:=1 step 1 until N do
     sum:=sum + Data[i];
    avg:=sum/N;
    Print Real(avg);
  end
end
Output: No
Expected Value: No
Time: 1m47.042s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
procedure p;
begin
  integer N;
  Read Int(N);
  begin
    real array Data[1:N];
    real sum, avg;
    integer i;
    sum:=0;
    for i:=1 step 1 until N do
      begin real val;
        Read Real(val);
        Data[i]:=if val<0 then -val else val;
      end
    for i:=1 step 1 until N do
     sum:=sum + Data[i];
    avg:=sum/N;
    Print Real(avg)
  end
end
Output: No
Expected Value: No
Time: 2m8.239s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
procedure p;
begin
  integer N;
  Read Int(N);
  begin
    real array Data[1:N];
    real sum, avg;
    integer i;
    sum:=0;
    for i:=1 step 1 until N do
      begin real val;
        Read Real(val);
        Data[i]:=if val<0 then -val else val
      end
    for i:=1 step 1 until N d
     sum:=sum + Data[i];
    avg:=sum/N;
    Print Real(avg)
  end
end
Output: No
Expected Value: No
Time: 1m49.839s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
procedure euler (fct, sum, eps, tim) ; value eps, tim; integer tim;
real procedure fct ; real sum, eps;  
comment Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed
do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim
ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut
aliquip ex ea commodo consequat. Duis aute irure dolor in
reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla
pariatur. Excepteur sint occaecat cupidatat non proident, sunt in
culpa qui officia deserunt mollit anim id est laborum. ; 
begin integer i,k,n,t ; array m[0:15] ; real mn, mp, ds ;
i := n := t := 0; m[0] := fct(0) ; sum := m[0]/2 ;
nextterm: i := i+1 ; mn := fct(i) ;
sum := sum + ds ;
if abs(ds) < eps then t := t + 1 else t := 0 ;
if t < tim then goto nextterm
end
Output: Yes
Expected Value: Yes
Time: 0m14.409s

--------------------------------------------------------------------------------
Pattern Type: PROCEDURE_DECLARATION
Input:
procedure euler (fct, sum, eps, tim) ; value eps, tim; integer tim;
real procedure fct ; real sum, eps;  
comment Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed
do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim
ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut
aliquip ex ea commodo consequat. Duis aute irure dolor in
reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla
pariatur. Excepteur sint occaecat cupidatat non proident, sunt in
culpa qui officia deserunt mollit anim id est laborum. ; 
begin integer i,k,n,t ; array m[0:15] ; real mn, mp, ds ;
i := n := t := 0; m[0] := fct(0) ; sum := m[0]/2 ;
nextterm: i := i+1 ; mn := fct(i) ;

for k := 0 step 1 until n do
	begin mp := (mn+m[k])/2 ; m[k] := mn ;
		  mn := mp 
	end;

if (abs(mn) < abs(m[n])) and (n < 15) then
   begin ds := mn/2 ; n := n+1 ; m[n] := mn 
   end
else ds := mn ;

sum := sum + ds ;
if abs(ds) < eps then t := t + 1 else t := 0 ;
if t < tim then goto nextterm
end
Output: --Does not return--
Expected Value: Yes
Time: ---

Note: With some modifications to the code can run with
Time: 0m36.499s

--------------------------------------------------------------------------------

IV.3 Operating Directions
As stated in section I.1, the interpreter from the following link was
compiled and used: ftp://ftp.ultimate.com/snobol/snobol4-1.1.tar.gz
In most cases a line of sample input was put into a test file the file
was redirected as standard input to snobol. Since the unit tests
involved different patterns, the program was modified to use the
corresponding pattern. For ease, there are ten files with sample
procedure declaration input. The names of these files are
"sample_program##.a60" and the range of ## is 01 - 10. The sourcecode
for the program is contained in "algol_recognizer.sno".

Example run:
$snobol4 -b -S 10m -P 10m -d 10m algol_recognizer.sno < sample_program01.a60

The example uses the following flags:
-b disable banner
-d increase size of dynamic region
-P increase size of pattern match stack
-S increase size of interpreter stack

IV.4 Cautions
Sometimes the program will take a long time for invalid input. Usually
give a 5 minute window for a response. Otherwise terminate execution
of the program. The program may give false negatives, but not false
positives. 

